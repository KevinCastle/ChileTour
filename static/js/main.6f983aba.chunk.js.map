{"version":3,"sources":["components/Navibar.js","components/Header.js","components/Slideshow.js","components/ItemCard.js","services/CardAPI.js","routers/AppRouter.js","serviceWorker.js","index.js"],"names":["Navibar","Navbar","collapseOnSelect","expand","bg","variant","Toggle","className","aria-controls","Collapse","id","Nav","NavDropdown","title","activeClassName","exact","to","Link","href","icon","faWhatsapp","faEnvelope","Header","src","process","alt","folderDir","Slideshow","props","Carousel","Item","imageDir","ItemCard","incluye","Card","Body","Title","nombre","Text","descripcion","CardDeck","map","el","index","key","opcional","CardAPI","state","services","axios","get","this","url","then","res","data","setState","React","Component","AppRouter","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6f983aba.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Navbar, NavDropdown, Nav } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faWhatsapp } from '@fortawesome/free-brands-svg-icons';\r\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navibar = () => {\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\">\r\n            <Navbar.Toggle className=\"w-100 h-150\" aria-controls=\"basic-navbar-nav\">MENU</Navbar.Toggle>\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <NavDropdown className=\"mr-5\" title=\"Santiago\" id=\"collasible-nav-dropdown\">\r\n                        <NavLink activeClassName=\"active\" className=\"navlink-item\" exact to=\"/ChileTour\">Encargos y Traslados</NavLink>\r\n                        <NavLink className=\"navlink-item\" to=\"/ChileTour/SantiagoTours\">Tours por Santiago</NavLink>\r\n                    </NavDropdown>\r\n                    <NavDropdown className=\"mr-5\" title=\"Viñedos\" id=\"collasible-nav-dropdown\">\r\n                        <p>Concha y Toro</p>\r\n                        <p>Santa Rita</p>\r\n                        <p>Cousiño Macul</p>\r\n                        <p>Indomita</p>\r\n                        <p>Casas del Bosque</p>\r\n                        <p>Matetic</p>\r\n                        <p>Loma Larga</p>\r\n                        <p>Lapostolle</p>\r\n                        <p>Viu Manent</p>\r\n                        <p>Montes</p>\r\n                        <p>Montgras</p>\r\n                        <p>Santa Cruz</p>\r\n                    </NavDropdown>\r\n                    <NavDropdown className=\"mr-5\" title=\"Centros de Ski\" id=\"collasible-nav-dropdown\">\r\n                        <p>Valle Nevado</p>\r\n                        <p>Farellones</p>\r\n                        <p>El Colorado</p>\r\n                        <p>La Parva</p>\r\n                        <p>Portillo</p>\r\n                    </NavDropdown>\r\n                    <NavDropdown className=\"mr-5\" title=\"Playas y Cruceros\" id=\"collasible-nav-dropdown\">\r\n                        <p>Viña del Mar y Valparaiso</p>\r\n                        <p>Isla Negra</p>\r\n                        <p>Cruceros</p>\r\n                    </NavDropdown>\r\n                    <NavDropdown className=\"mr-5\" title=\"Entretenimientos\" id=\"collasible-nav-dropdown\">\r\n                        <p>Casino Sun Monticello</p>\r\n                        <p>Casino Enjoy Santiago</p>\r\n                        <p>Cena Show Bali Hai</p>\r\n                        <p>Museo de Autos Antiguos</p>\r\n                        <p>Parque Safari</p>\r\n                    </NavDropdown>\r\n\r\n                </Nav>\r\n                <Nav>\r\n                    <Nav.Link className=\"mr-5\" id=\"item--whatsapp\" href=\"#deets\"><FontAwesomeIcon icon={faWhatsapp} /> WhatsApp</Nav.Link>\r\n                    <Nav.Link className=\"mr-auto\" id=\"item--email\" href=\"#memes\"><FontAwesomeIcon icon={faEnvelope} /> pedropabloopazo@gmail.com</Nav.Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\n\r\nexport default Navibar\r\n","import React from 'react';\r\nimport Navibar from './Navibar';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"header-background\">\r\n                <img className=\"header-background__image\" src={process.env.PUBLIC_URL + \"/images/Header/background.jpg\"} alt=\"\" />\r\n                <div className=\"header-background__container\">\r\n                    <img className=\"header-logo\" src={process.env.PUBLIC_URL + \"/images/Header/chiletour.png\"} alt=\"\" />\r\n                    <p> MY CHILE TOUR</p>\r\n                </div>\r\n            </div>\r\n            <Navibar />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","// import React from 'react'\r\n\r\n// const folderDir = process.env.PUBLIC_URL + '/images/';\r\n\r\n// class Slideshow extends React.Component {\r\n//     constructor(props) {\r\n//         super(props)\r\n\r\n//         this.state = {\r\n\r\n//         };\r\n\r\n\r\n//         this.images = [\r\n//             {\r\n//                 original: folderDir + this.props.imageDir + \"/1.jpg\"\r\n//             },\r\n//             {\r\n//                 original: folderDir + this.props.imageDir + \"/2.jpg\"\r\n//             },\r\n//             {\r\n//                 original: folderDir + this.props.imageDir + \"/3.jpg\"\r\n//             },\r\n//         ];\r\n//     };\r\n\r\n//     render() {\r\n//         return (\r\n//             <ImageGallery\r\n//                 items={this.images}\r\n//                 autoPlay={true}\r\n//                 showBullets={true}\r\n//                 showThumbnails={false}\r\n//                 showFullscreenButton={false}\r\n//             />\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default Slideshow;\r\n\r\n\r\n\r\n// https://www.npmjs.com/package/react-image-gallery\r\n\r\nimport React from 'react';\r\nimport Carousel from 'react-bootstrap/Carousel'\r\nconst folderDir = process.env.PUBLIC_URL + '/images/';\r\n\r\n\r\nconst Slideshow = (props) => {\r\n    return (\r\n        <div>\r\n            <Carousel>\r\n                <Carousel.Item>\r\n                    <img\r\n                        className=\"d-block w-100\"\r\n                        src={folderDir + props.imageDir + \"/1.jpg\"}\r\n                        alt=\"First slide\"\r\n                    />\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                    <img\r\n                        className=\"d-block w-100\"\r\n                        src={folderDir + props.imageDir + \"/2.jpg\"}\r\n                        alt=\"Third slide\"\r\n                    />\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                    <img\r\n                        className=\"d-block w-100\"\r\n                        src={folderDir + props.imageDir + \"/3.jpg\"}\r\n                        alt=\"Third slide\"\r\n                    />\r\n                </Carousel.Item>\r\n            </Carousel>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Slideshow\r\n\r\n\r\n","import React from 'react'\r\nimport Slideshow from './Slideshow';\r\nimport Card from 'react-bootstrap/Card';\r\nimport CardDeck from 'react-bootstrap/CardDeck'\r\n\r\n\r\nconst ItemCard = (props) => {\r\n    return (\r\n        <div>\r\n            {props.incluye &&\r\n                <div className=\"card-container\">\r\n                    <Card>\r\n                        <Slideshow imageDir={props.imageDir} />\r\n                        <Card.Body>\r\n                            <Card.Title className=\"card-title\">{props.nombre}</Card.Title>\r\n                            <Card.Text className=\"card-text\">{props.descripcion}</Card.Text>\r\n                            <CardDeck>\r\n                                <Card className=\"card-extra w-auto\">\r\n                                    <Card.Header>Incluye</Card.Header>\r\n                                    <Card.Body>\r\n                                            <ul>\r\n                                                {props.incluye.map((el, index) => <li key={index}>{el}</li>)}\r\n                                            </ul>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                                <Card className=\"card-extra w-auto\">\r\n                                    <Card.Header>Opcional</Card.Header>\r\n                                    <Card.Body>\r\n                                            <ul>\r\n                                                {props.opcional.map((el, index) => <li key={index}>{el}</li>)}\r\n                                            </ul>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </CardDeck>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ItemCard;","import React from 'react';\r\nimport axios from 'axios';\r\nimport ItemCard from '../components/ItemCard';\r\n\r\nexport default class CardAPI extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            services: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(this.props.url)\r\n            .then(res => {\r\n                const services = res.data;\r\n                this.setState({ services });\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <section>\r\n                    {this.state.services.map((services, index) =>\r\n                        <ItemCard\r\n                            key={index}\r\n                            nombre={services.nombre}\r\n                            descripcion={services.descripcion}\r\n                            incluye={services.incluye}\r\n                            opcional={services.opcional}\r\n                            imageDir={services.imageDir}\r\n                        />\r\n                    )}\r\n                </section>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Header from '../components/Header';\r\nimport CardAPI from '../services/CardAPI';\r\n\r\nconst AppRouter = () => (\r\n    <BrowserRouter>\r\n        <Header />\r\n        <Switch>\r\n            <Route exact={true} path=\"/ChileTour\" key=\"main-page\">\r\n                <CardAPI url='https://api.npoint.io/cef0bf8341dd206787a2' />\r\n            </Route>\r\n            <Route path=\"/ChileTour/SantiagoTours\" key=\"tour-page\">\r\n                <CardAPI url=\"https://api.npoint.io/c1bd0d54cb63250a88db\" />\r\n            </Route>\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default AppRouter;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppRouter from './routers/AppRouter';\nimport * as serviceWorker from './serviceWorker';\nimport 'normalize.css';\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppRouter />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}